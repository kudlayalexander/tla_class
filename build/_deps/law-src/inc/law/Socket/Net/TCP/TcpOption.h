#pragma once

#include <netinet/tcp.h>

namespace law::socket::net::tcp {
    enum class TcpOption {
        NODELAY = TCP_NODELAY,
        MAXSEG = TCP_MAXSEG,
        CORK = TCP_CORK,
        KEEPIDLE = TCP_KEEPIDLE,
        KEEPINTVL = TCP_KEEPINTVL,
        KEEPCNT = TCP_KEEPCNT,
        SYNCNT = TCP_SYNCNT,
        LINGER2 = TCP_LINGER2,
        DEFER_ACCEPT = TCP_DEFER_ACCEPT,
        WINDOW_CLAMP = TCP_WINDOW_CLAMP,
        INFO = TCP_INFO,
        QUICKACK = TCP_QUICKACK,
        CONGESTION = TCP_CONGESTION,
        MD5SIG = TCP_MD5SIG,
        COOKIE_TRANSACTIONS = TCP_COOKIE_TRANSACTIONS,
        THIN_LINEAR_TIMEOUTS = TCP_THIN_LINEAR_TIMEOUTS,
        THIN_DUPACK = TCP_THIN_DUPACK,
        USER_TIMEOUT = TCP_USER_TIMEOUT,
        REPAIR = TCP_REPAIR,
        REPAIR_QUEUE = TCP_REPAIR_QUEUE,
        QUEUE_SEQ = TCP_QUEUE_SEQ,
        REPAIR_OPTIONS = TCP_REPAIR_OPTIONS,
        FASTOPEN = TCP_FASTOPEN,
        TIMESTAMP = TCP_TIMESTAMP,
        NOTSENT_LOWAT = TCP_NOTSENT_LOWAT,
        CC_INFO = TCP_CC_INFO,
        SAVE_SYN = TCP_SAVE_SYN,
        SAVED_SYN = TCP_SAVED_SYN
    };
}