#pragma once

#include <sys/socket.h>
#include <linux/can/j1939.h>
#include <linux/can/isotp.h>

namespace law::socket {
    enum class SocketOption {
        DEBUG = SO_DEBUG,
        REUSEADDR = SO_REUSEADDR,
        TYPE = SO_TYPE,
        ERROR = SO_ERROR,
        DONTROUTE = SO_DONTROUTE,
        BROADCAST = SO_BROADCAST,
        SNDBUF = SO_SNDBUF,
        RCVBUF = SO_RCVBUF,
        SNDBUFFORCE = SO_SNDBUFFORCE,
        RCVBUFFORCE = SO_RCVBUFFORCE,
        KEEPALIVE = SO_KEEPALIVE,
        OOBINLINE = SO_OOBINLINE,
        NO_CHECK = SO_NO_CHECK,
        PRIORITY = SO_PRIORITY,
        LINGER = SO_LINGER,
        BSDCOMPAT = SO_BSDCOMPAT,
        REUSEPORT = SO_REUSEPORT,
        PASSCRED = SO_PASSCRED,
        PEERCRED = SO_PEERCRED,
        RCVLOWAT = SO_RCVLOWAT,
        SNDLOWAT = SO_SNDLOWAT,
        RCVTIMEO = SO_RCVTIMEO,
        SNDTIMEO = SO_SNDTIMEO,

        SECURITY_AUTHENTICATION = SO_SECURITY_AUTHENTICATION,
        SECURITY_ENCRYPTION_TRANSPORT = SO_SECURITY_ENCRYPTION_TRANSPORT,
        SECURITY_ENCRYPTION_NETWORK = SO_SECURITY_ENCRYPTION_NETWORK,

        BINDTODEVICE = SO_BINDTODEVICE,

        ATTACH_FILTER = SO_ATTACH_FILTER,
        DETACH_FILTER = SO_DETACH_FILTER,
        GET_FILTER = SO_GET_FILTER,

        PEERNAME = SO_PEERNAME,
        TIMESTAMP = SO_TIMESTAMP,

        ACCEPTCONN = SO_ACCEPTCONN,

        PEERSEC = SO_PEERSEC,
        PASSSEC = SO_PASSSEC,
        TIMESTAMPNS = SO_TIMESTAMPNS,

        MARK = SO_MARK,

        TIMESTAMPING = SO_TIMESTAMPING,

        PROTOCOL = SO_PROTOCOL,

        RXQ_OVFL = SO_RXQ_OVFL,

        WIFI_STATUS = SO_WIFI_STATUS,
        PEEK_OFF = SO_PEEK_OFF,

        NOFCS = SO_NOFCS,

        LOCK_FILTER = SO_LOCK_FILTER,

        SELECT_ERR_QUEUE = SO_SELECT_ERR_QUEUE,

        BUSY_POLL = SO_BUSY_POLL,

        MAX_PACING_RATE = SO_MAX_PACING_RATE,

        BPF_EXTENSIONS = SO_BPF_EXTENSIONS,

        INCOMING_CPU = SO_INCOMING_CPU,

        ATTACH_BPF = SO_ATTACH_BPF,
        DETACH_BPF = SO_DETACH_BPF,

        J1939_PROMISC = SO_J1939_PROMISC,
        J1939_SEND_PRIO = SO_J1939_SEND_PRIO,

        ISOTP_OPTS = CAN_ISOTP_OPTS,
        ISOTP_RECV_OPTS = CAN_ISOTP_RECV_FC,
        ISOTP_LL_OPTS = CAN_ISOTP_LL_OPTS
    };
}